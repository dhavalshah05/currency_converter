plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.serialization)
    alias(libs.plugins.sqlDelight)
    alias(libs.plugins.daggerHilt)
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.app'
    compileSdk 33

    defaultConfig {
        applicationId "com.app"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "OPEN_EXCHANGE_API_KEY", "\"${OPEN_EXCHANGE_API_KEY}\""
    }

    signingConfigs {
        debug {
            storeFile file('../keys/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('../keys/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.composeKotlinCompiler.get()
    }

    testOptions {
        unitTests.all {
            it.useJUnitPlatform()
        }
    }
}

kapt {
    correctErrorTypes true
}

sqldelight {
    MyDatabase {
        packageName = "com.app.db"
    }
}

dependencies {

    // AndroidX
    implementation libs.androidX.coreKtx
    implementation libs.androidX.appCompat
    implementation libs.androidX.constraintLayout
    implementation libs.androidX.lifecycle.viewModel

    // Ktor
    implementation libs.ktor.client.core
    implementation libs.ktor.client.okhttp
    implementation libs.ktor.client.contentNegotiation
    implementation libs.ktor.serialization
    // Test - Ktor
    testImplementation libs.ktor.client.mock

    // Logging Interceptor
    implementation libs.loggingInterceptor

    // Coroutine
    implementation libs.coroutines.core
    implementation libs.coroutines.android

    // Hilt
    implementation libs.dagger.hiltAndroid
    kapt libs.dagger.hiltCompiler

    // Compose
    implementation platform(libs.compose.bom)
    implementation libs.compose.material
    debugImplementation libs.compose.ui.tooling
    implementation libs.compose.ui.toolingPreview

    // SQLDelight
    implementation libs.sqlDelight.androidDriver
    // Test - SQLDelight
    testImplementation libs.sqlDelight.sqliteDriver

    // Navigation
    implementation libs.navigation.fragment
    implementation libs.navigation.ui

    // UI
    implementation libs.nitrozenAndroid

    // WorkManager
    implementation libs.androidX.workRuntime
    implementation libs.hilt.work
    kapt libs.hilt.compiler

    // Test - Kotest
    testImplementation libs.kotest.runner
    testImplementation libs.kotest.assertionCore
    testImplementation libs.kotest.property

    // Test - Mock
    testImplementation libs.mockk.android
    testImplementation libs.mockk.agent

    // Test - Flow
    testImplementation libs.turbine
}